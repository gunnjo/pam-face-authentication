/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)
  GtkWidget *webcamImage;
  GtkWidget *userDetails;
    GtkWidget *userList;
GtkWidget*
create_faceManager (void)
{
  GtkWidget *faceManager;
  GtkWidget *vbox11;
  GtkWidget *hbox1;
  GtkWidget *vbox2;

  GtkWidget *alignment1;
  GtkWidget *vbox6;
  GtkWidget *vbox7;
  GtkWidget *username;
  GtkWidget *hbox4;
  GtkWidget *assign;
  GtkWidget *userFace;
  GtkWidget *label1;
  GtkWidget *vbox1;
  GtkWidget *vbox8;
  GtkWidget *scrolledwindow1;

  GtkWidget *label5;
  GtkWidget *label6;
  GtkWidget *hbox17;
  GtkWidget *addUser;
  GtkWidget *alignment9;
  GtkWidget *hbox18;
  GtkWidget *image10;
  GtkWidget *label15;
  GtkWidget *removeUser;
  GtkWidget *alignment11;
  GtkWidget *hbox20;
  GtkWidget *image12;
  GtkWidget *label17;
  GtkWidget *hbox5;
  GtkWidget *save;
  GtkWidget *alignment3;
  GtkWidget *hbox6;
  GtkWidget *image4;
  GtkWidget *label4;
  GtkWidget *exit;
  GtkWidget *alignment2;
  GtkWidget *hbox3;
  GtkWidget *image3;
  GtkWidget *label3;
  GtkWidget *status;

  faceManager = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (faceManager), _("Face Manager"));

  vbox11 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox11);
  gtk_container_add (GTK_CONTAINER (faceManager), vbox11);

  hbox1 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox1);
  gtk_box_pack_start (GTK_BOX (vbox11), hbox1, TRUE, TRUE, 0);

  vbox2 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox2);
  gtk_box_pack_start (GTK_BOX (hbox1), vbox2, TRUE, TRUE, 0);

  webcamImage = create_pixmap (faceManager, NULL);
  gtk_widget_show (webcamImage);
  gtk_box_pack_start (GTK_BOX (vbox2), webcamImage, TRUE, TRUE, 0);

  userDetails = gtk_frame_new (NULL);
  gtk_box_pack_start (GTK_BOX (vbox2), userDetails, TRUE, TRUE, 0);
  gtk_frame_set_shadow_type (GTK_FRAME (userDetails), GTK_SHADOW_NONE);

  alignment1 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment1);
  gtk_container_add (GTK_CONTAINER (userDetails), alignment1);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment1), 0, 0, 12, 0);

  vbox6 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox6);
  gtk_container_add (GTK_CONTAINER (alignment1), vbox6);

  vbox7 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox7);
  gtk_box_pack_start (GTK_BOX (vbox6), vbox7, FALSE, FALSE, 0);

  username = gtk_label_new ("");
  gtk_widget_show (username);
  gtk_box_pack_start (GTK_BOX (vbox7), username, FALSE, FALSE, 0);

  hbox4 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox4);
  gtk_box_pack_start (GTK_BOX (vbox7), hbox4, TRUE, TRUE, 0);

  assign = gtk_button_new_with_mnemonic (_("Assign"));
  gtk_widget_show (assign);
  gtk_box_pack_start (GTK_BOX (hbox4), assign, FALSE, FALSE, 0);

  userFace = create_pixmap (faceManager, NULL);
  gtk_widget_show (userFace);
  gtk_box_pack_start (GTK_BOX (hbox4), userFace, TRUE, TRUE, 0);

  label1 = gtk_label_new (_("<b>User Details</b>"));
  gtk_widget_show (label1);
  gtk_frame_set_label_widget (GTK_FRAME (userDetails), label1);
  gtk_label_set_use_markup (GTK_LABEL (label1), TRUE);

  vbox1 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox1);
  gtk_box_pack_start (GTK_BOX (hbox1), vbox1, TRUE, TRUE, 0);

  vbox8 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox8);
  gtk_box_pack_start (GTK_BOX (vbox1), vbox8, TRUE, TRUE, 0);

  scrolledwindow1 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow1);
  gtk_box_pack_start (GTK_BOX (vbox8), scrolledwindow1, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow1), GTK_POLICY_NEVER, GTK_POLICY_ALWAYS);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow1), GTK_SHADOW_IN);

  userList = gtk_clist_new (2);
  gtk_widget_show (userList);
  gtk_container_add (GTK_CONTAINER (scrolledwindow1), userList);
  gtk_container_set_border_width (GTK_CONTAINER (userList), 1);
  gtk_clist_set_column_width (GTK_CLIST (userList), 0, 80);
  gtk_clist_set_column_width (GTK_CLIST (userList), 1, 80);
  gtk_clist_column_titles_show (GTK_CLIST (userList));
  gtk_clist_set_shadow_type (GTK_CLIST (userList), GTK_SHADOW_NONE);

  label5 = gtk_label_new (_("User Name"));
  gtk_widget_show (label5);
  gtk_clist_set_column_widget (GTK_CLIST (userList), 0, label5);

  label6 = gtk_label_new (_("Face Assigned"));
  gtk_widget_show (label6);
  gtk_clist_set_column_widget (GTK_CLIST (userList), 1, label6);

  hbox17 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox17);
  gtk_box_pack_start (GTK_BOX (vbox1), hbox17, FALSE, FALSE, 0);

  addUser = gtk_button_new ();
  gtk_widget_show (addUser);
  gtk_box_pack_start (GTK_BOX (hbox17), addUser, TRUE, TRUE, 0);

  alignment9 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment9);
  gtk_container_add (GTK_CONTAINER (addUser), alignment9);

  hbox18 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox18);
  gtk_container_add (GTK_CONTAINER (alignment9), hbox18);

  image10 = gtk_image_new_from_stock ("gtk-add", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image10);
  gtk_box_pack_start (GTK_BOX (hbox18), image10, FALSE, FALSE, 0);

  label15 = gtk_label_new_with_mnemonic (_("Add User"));
  gtk_widget_show (label15);
  gtk_box_pack_start (GTK_BOX (hbox18), label15, FALSE, FALSE, 0);

  removeUser = gtk_button_new ();
  gtk_widget_show (removeUser);
  gtk_box_pack_start (GTK_BOX (hbox17), removeUser, TRUE, TRUE, 0);

  alignment11 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment11);
  gtk_container_add (GTK_CONTAINER (removeUser), alignment11);

  hbox20 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox20);
  gtk_container_add (GTK_CONTAINER (alignment11), hbox20);

  image12 = gtk_image_new_from_stock ("gtk-remove", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image12);
  gtk_box_pack_start (GTK_BOX (hbox20), image12, FALSE, FALSE, 0);

  label17 = gtk_label_new_with_mnemonic (_("Remove User"));
  gtk_widget_show (label17);
  gtk_box_pack_start (GTK_BOX (hbox20), label17, FALSE, FALSE, 0);

  hbox5 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox5);
  gtk_box_pack_start (GTK_BOX (vbox1), hbox5, FALSE, FALSE, 0);

  save = gtk_button_new ();
  gtk_widget_show (save);
  gtk_box_pack_start (GTK_BOX (hbox5), save, TRUE, TRUE, 0);
  gtk_widget_set_size_request (save, -1, 32);

  alignment3 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment3);
  gtk_container_add (GTK_CONTAINER (save), alignment3);

  hbox6 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox6);
  gtk_container_add (GTK_CONTAINER (alignment3), hbox6);

  image4 = gtk_image_new_from_stock ("gtk-apply", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image4);
  gtk_box_pack_start (GTK_BOX (hbox6), image4, FALSE, FALSE, 0);

  label4 = gtk_label_new_with_mnemonic (_("Save All Actions"));
  gtk_widget_show (label4);
  gtk_box_pack_start (GTK_BOX (hbox6), label4, FALSE, FALSE, 0);

  exit = gtk_button_new ();
  gtk_widget_show (exit);
  gtk_box_pack_start (GTK_BOX (hbox5), exit, TRUE, TRUE, 0);
  gtk_widget_set_size_request (exit, -1, 34);

  alignment2 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment2);
  gtk_container_add (GTK_CONTAINER (exit), alignment2);

  hbox3 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox3);
  gtk_container_add (GTK_CONTAINER (alignment2), hbox3);

  image3 = gtk_image_new_from_stock ("gtk-quit", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image3);
  gtk_box_pack_start (GTK_BOX (hbox3), image3, FALSE, FALSE, 0);

  label3 = gtk_label_new_with_mnemonic (_("Exit Without Saving"));
  gtk_widget_show (label3);
  gtk_box_pack_start (GTK_BOX (hbox3), label3, FALSE, FALSE, 0);

  status = gtk_label_new (_("STATUS"));
  gtk_widget_show (status);
  gtk_box_pack_start (GTK_BOX (vbox11), status, FALSE, FALSE, 0);

  g_signal_connect ((gpointer) assign, "clicked",
                    G_CALLBACK (on_assign_clicked),
                    NULL);
  g_signal_connect ((gpointer) userList, "select_row",
                    G_CALLBACK (on_userList_select_row),
                    NULL);
  g_signal_connect ((gpointer) userList, "unselect_row",
                    G_CALLBACK (on_userList_unselect_row),
                    NULL);
  g_signal_connect ((gpointer) addUser, "clicked",
                    G_CALLBACK (on_addUser_clicked),
                    NULL);
  g_signal_connect ((gpointer) removeUser, "clicked",
                    G_CALLBACK (on_removeUser_clicked),
                    NULL);
  g_signal_connect ((gpointer) save, "clicked",
                    G_CALLBACK (on_save_clicked),
                    NULL);
  g_signal_connect ((gpointer) exit, "clicked",
                    G_CALLBACK (on_exit_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (faceManager, faceManager, "faceManager");
  GLADE_HOOKUP_OBJECT (faceManager, vbox11, "vbox11");
  GLADE_HOOKUP_OBJECT (faceManager, hbox1, "hbox1");
  GLADE_HOOKUP_OBJECT (faceManager, vbox2, "vbox2");
  GLADE_HOOKUP_OBJECT (faceManager, webcamImage, "webcamImage");
  GLADE_HOOKUP_OBJECT (faceManager, userDetails, "userDetails");
  GLADE_HOOKUP_OBJECT (faceManager, alignment1, "alignment1");
  GLADE_HOOKUP_OBJECT (faceManager, vbox6, "vbox6");
  GLADE_HOOKUP_OBJECT (faceManager, vbox7, "vbox7");
  GLADE_HOOKUP_OBJECT (faceManager, username, "username");
  GLADE_HOOKUP_OBJECT (faceManager, hbox4, "hbox4");
  GLADE_HOOKUP_OBJECT (faceManager, assign, "assign");
  GLADE_HOOKUP_OBJECT (faceManager, userFace, "userFace");
  GLADE_HOOKUP_OBJECT (faceManager, label1, "label1");
  GLADE_HOOKUP_OBJECT (faceManager, vbox1, "vbox1");
  GLADE_HOOKUP_OBJECT (faceManager, vbox8, "vbox8");
  GLADE_HOOKUP_OBJECT (faceManager, scrolledwindow1, "scrolledwindow1");
  GLADE_HOOKUP_OBJECT (faceManager, userList, "userList");
  GLADE_HOOKUP_OBJECT (faceManager, label5, "label5");
  GLADE_HOOKUP_OBJECT (faceManager, label6, "label6");
  GLADE_HOOKUP_OBJECT (faceManager, hbox17, "hbox17");
  GLADE_HOOKUP_OBJECT (faceManager, addUser, "addUser");
  GLADE_HOOKUP_OBJECT (faceManager, alignment9, "alignment9");
  GLADE_HOOKUP_OBJECT (faceManager, hbox18, "hbox18");
  GLADE_HOOKUP_OBJECT (faceManager, image10, "image10");
  GLADE_HOOKUP_OBJECT (faceManager, label15, "label15");
  GLADE_HOOKUP_OBJECT (faceManager, removeUser, "removeUser");
  GLADE_HOOKUP_OBJECT (faceManager, alignment11, "alignment11");
  GLADE_HOOKUP_OBJECT (faceManager, hbox20, "hbox20");
  GLADE_HOOKUP_OBJECT (faceManager, image12, "image12");
  GLADE_HOOKUP_OBJECT (faceManager, label17, "label17");
  GLADE_HOOKUP_OBJECT (faceManager, hbox5, "hbox5");
  GLADE_HOOKUP_OBJECT (faceManager, save, "save");
  GLADE_HOOKUP_OBJECT (faceManager, alignment3, "alignment3");
  GLADE_HOOKUP_OBJECT (faceManager, hbox6, "hbox6");
  GLADE_HOOKUP_OBJECT (faceManager, image4, "image4");
  GLADE_HOOKUP_OBJECT (faceManager, label4, "label4");
  GLADE_HOOKUP_OBJECT (faceManager, exit, "exit");
  GLADE_HOOKUP_OBJECT (faceManager, alignment2, "alignment2");
  GLADE_HOOKUP_OBJECT (faceManager, hbox3, "hbox3");
  GLADE_HOOKUP_OBJECT (faceManager, image3, "image3");
  GLADE_HOOKUP_OBJECT (faceManager, label3, "label3");
  GLADE_HOOKUP_OBJECT (faceManager, status, "status");

  return faceManager;
}

GtkWidget*
create_userNamePrompt (void)
{
  GtkWidget *userNamePrompt;
  GtkWidget *vbox9;
  GtkWidget *vbox10;
  GtkWidget *label7;
  GtkWidget *username;
  GtkWidget *hbox9;
  GtkWidget *add;
  GtkWidget *cancel;

  userNamePrompt = gtk_window_new (GTK_WINDOW_POPUP);
  gtk_window_set_title (GTK_WINDOW (userNamePrompt), _("Add User"));
  gtk_window_set_position (GTK_WINDOW (userNamePrompt), GTK_WIN_POS_CENTER_ALWAYS);
  gtk_window_set_modal (GTK_WINDOW (userNamePrompt), TRUE);
  gtk_window_set_type_hint (GTK_WINDOW (userNamePrompt), GDK_WINDOW_TYPE_HINT_DIALOG);

  vbox9 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox9);
  gtk_container_add (GTK_CONTAINER (userNamePrompt), vbox9);

  vbox10 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox10);
  gtk_box_pack_start (GTK_BOX (vbox9), vbox10, TRUE, TRUE, 0);

  label7 = gtk_label_new (_("Enter the User Name"));
  gtk_widget_show (label7);
  gtk_box_pack_start (GTK_BOX (vbox10), label7, FALSE, FALSE, 4);

  username = gtk_entry_new ();
  gtk_widget_show (username);
  gtk_box_pack_start (GTK_BOX (vbox10), username, FALSE, FALSE, 4);
  gtk_entry_set_invisible_char (GTK_ENTRY (username), 9679);

  hbox9 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox9);
  gtk_box_pack_start (GTK_BOX (vbox9), hbox9, TRUE, TRUE, 0);

  add = gtk_button_new_from_stock ("gtk-add");
  gtk_widget_show (add);
  gtk_box_pack_start (GTK_BOX (hbox9), add, TRUE, TRUE, 0);

  cancel = gtk_button_new_from_stock ("gtk-cancel");
  gtk_widget_show (cancel);
  gtk_box_pack_start (GTK_BOX (hbox9), cancel, TRUE, TRUE, 0);

  g_signal_connect ((gpointer) add, "clicked",
                    G_CALLBACK (on_add_clicked),
                    NULL);
  g_signal_connect ((gpointer) cancel, "clicked",
                    G_CALLBACK (on_cancel_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (userNamePrompt, userNamePrompt, "userNamePrompt");
  GLADE_HOOKUP_OBJECT (userNamePrompt, vbox9, "vbox9");
  GLADE_HOOKUP_OBJECT (userNamePrompt, vbox10, "vbox10");
  GLADE_HOOKUP_OBJECT (userNamePrompt, label7, "label7");
  GLADE_HOOKUP_OBJECT (userNamePrompt, username, "username");
  GLADE_HOOKUP_OBJECT (userNamePrompt, hbox9, "hbox9");
  GLADE_HOOKUP_OBJECT (userNamePrompt, add, "add");
  GLADE_HOOKUP_OBJECT (userNamePrompt, cancel, "cancel");

  return userNamePrompt;
}

GtkWidget*
create_removeUserPrompt (void)
{
  GtkWidget *removeUserPrompt;
  GtkWidget *vbox12;
  GtkWidget *label9;
  GtkWidget *hbox10;
  GtkWidget *yes;
  GtkWidget *no;

  removeUserPrompt = gtk_window_new (GTK_WINDOW_POPUP);
  gtk_window_set_title (GTK_WINDOW (removeUserPrompt), _("Remove User"));
  gtk_window_set_position (GTK_WINDOW (removeUserPrompt), GTK_WIN_POS_CENTER_ALWAYS);
  gtk_window_set_modal (GTK_WINDOW (removeUserPrompt), TRUE);

  vbox12 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox12);
  gtk_container_add (GTK_CONTAINER (removeUserPrompt), vbox12);

  label9 = gtk_label_new (_("Do you want to remove the selected User Name from the List?"));
  gtk_widget_show (label9);
  gtk_box_pack_start (GTK_BOX (vbox12), label9, FALSE, FALSE, 8);
  gtk_misc_set_padding (GTK_MISC (label9), 7, 7);

  hbox10 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox10);
  gtk_box_pack_start (GTK_BOX (vbox12), hbox10, TRUE, TRUE, 0);

  yes = gtk_button_new_from_stock ("gtk-yes");
  gtk_widget_show (yes);
  gtk_box_pack_start (GTK_BOX (hbox10), yes, TRUE, TRUE, 0);

  no = gtk_button_new_from_stock ("gtk-no");
  gtk_widget_show (no);
  gtk_box_pack_start (GTK_BOX (hbox10), no, TRUE, TRUE, 0);

  g_signal_connect ((gpointer) yes, "clicked",
                    G_CALLBACK (on_yes_clicked),
                    NULL);
  g_signal_connect ((gpointer) no, "clicked",
                    G_CALLBACK (on_no_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (removeUserPrompt, removeUserPrompt, "removeUserPrompt");
  GLADE_HOOKUP_OBJECT (removeUserPrompt, vbox12, "vbox12");
  GLADE_HOOKUP_OBJECT (removeUserPrompt, label9, "label9");
  GLADE_HOOKUP_OBJECT (removeUserPrompt, hbox10, "hbox10");
  GLADE_HOOKUP_OBJECT (removeUserPrompt, yes, "yes");
  GLADE_HOOKUP_OBJECT (removeUserPrompt, no, "no");

  return removeUserPrompt;
}

